

= make FK attendance to module_calendar cascade

= add 'ccp' varchar 150
     to Table "teacher" & "student"



= create tables
    CREATE TABLE role (
        id INTEGER PRIMARY KEY,
        name VARCHAR (50) 
    );

    CREATE TABLE user_roles (
        id INTEGER PRIMARY KEY,
        user_id INTEGER,
        role_id INTEGER,
        FOREIGN KEY (user_id)
        REFERENCES user (id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (role_id)
        REFERENCES role (id) ON DELETE CASCADE ON UPDATE CASCADE
    );


= add records to table "user_roles"
4    3    1
5    2    1

= 
pip install flask-principal
pip install permission

= add field 'is_active' to tables
    user
    student
    teacher

= change is_active to "1" in user table

= TABLES
    CREATE TABLE attendance_supervisor (
        id INTEGER PRIMARY KEY,
        session_id INTEGER,
        user_id INTEGER,
        FOREIGN KEY (session_id)
        REFERENCES session (id),
        FOREIGN KEY (user_id)
        REFERENCES user (id) 
    );




= add field 'is_rattrapage' boolean in 'module_session'

= add 'tmp_session_id' to module_session

= COPY DATA
    ****** delete records without teacher_id
id module_id session_id teacher_id
21  31  39  4
44  150 44  4
117 35  45  4
172 21  75  3
173 31  78  11
177 1   74  10
178 22  75  6
179 23  75  43
180 24  75  7
181 25  75  9
187 32  78  34
188 33  78  10
189 34  78  12
195 221 80  18
196 222 80  13
206 60  83  25
208 62  83  24
209 63  83  35
210 64  83  12
211 65  83  5
212 66  83  4
213 67  83  4
214 68  83  26
215 69  83  3
216 70  83  9
229 212 85  3
232 213 85  17
233 214 85  16
234 215 85  15
236 82  87  19
237 83  87  31
241 86  87  20
242 87  87  22
245 90  87  34
246 91  87  23
247 92  87  21
248 93  87  17
249 94  87  15
265 173 89  29
295 31  93  4
298 35  94  4
303 101 91  10
307 105 91  29
308 106 91  16
310 108 91  28
311 109 91  5
312 39  92  10
314 41  92  38
316 43  92  29
317 44  92  16
318 45  92  23
319 46  92  28
320 47  92  5
324 5   74  29
325 6   74  16
327 8   74  28
328 9   74  5


= fill by running code
    fill 'promo_id'
    fill 'is_rattrapage'
    fill 'module_code' & 'module_name'

@app.route('/run-code')
def run_code():
    module_sessions = ModuleSession.query.all()
    for ms in module_sessions:
        if ms.tmp_session_id != None:
            session = Session.query.get_or_404(ms.session_id)
            ms.promo_id = session.promo_id
            ms.is_rattrapage = session.is_rattrapage
            ms.module_code = ms.module.code
            ms.module_name = ms.module.name
    db.session.commit()
    return 'code run (fill promo_id)'



= 

= 

= 

= 

= 

= 

= 




======== grab these ========

== _run_celery.bat
color 06
cmd /k "env\Scripts\activate && celery -A app:celery worker --loglevel=info -P gevent"

== evaluation.bat
color 05
set flask_app=app.py
set flask_debug=0

start "celery" "_run_celery.bat"
cmd /k "env\Scripts\activate && flask run"



                    #### Add the path of your Redis folder as a Windows ‘environment variable.’
                    # install redis server
                    $ redis-server --service-install

                    # start redis server
                    $ redis-server --service-start

                    # save and stop the Redis database
                    $ redis-server shutdown save

                    # from command line please check if redis is up
                    $ redis-cli ping



= 

= 

= 